{"version":3,"sources":["components/Button.jsx","components/Alert.jsx","components/Form.jsx","components/List.jsx","App.js","index.js"],"names":["Button","props","className","type","onClick","children","Alert","title","content","handleOkay","Form","useState","username","setUsername","age","setAge","onSubmit","e","preventDefault","trim","length","console","log","userInput","obj","name","htmlFor","id","onChange","target","value","List","App","allList","setAllList","emptyAlert","setEmptyAlert","h2","para","setTitle","allListing","map","i","prevState","ReactDOM","render","document","getElementById"],"mappings":"oRAceA,MAZf,SAAgBC,GACf,OACC,wBACCC,UAAU,SACVC,KAAMF,EAAME,MAAQ,SACpBC,QAASH,EAAMG,QAHhB,SAKEH,EAAMI,YCOKC,MAZf,SAAeL,GACd,OACC,sBAAKC,UAAU,QAAf,UACC,oBAAIA,UAAU,UAAd,SAAyBD,EAAMM,QAC/B,4BAAIN,EAAMO,UACV,cAAC,EAAD,CAAQN,UAAU,QAAQE,QAASH,EAAMQ,WAAzC,sB,MCmDYC,MAxDf,SAAcT,GACb,MAAgCU,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KA+BA,OACC,uBAAMb,UAAU,OAAOc,SAtBxB,SAAsBC,GAGrB,GAFAA,EAAEC,iBAE6B,IAA3BN,EAASO,OAAOC,QAAgBN,EAAIK,OAAOC,OAC9CC,QAAQC,IAAI,mBACZrB,EAAMsB,UAAU,wBACV,IAAKT,EAAM,EACjBO,QAAQC,IAAI,qBACZrB,EAAMsB,UAAU,yBACV,CACN,IAAMC,EAAM,CACXC,KAAMb,EACNE,KAAMA,GAEPb,EAAMsB,UAAUC,GAGjBX,EAAY,IACZE,EAAO,KAIP,UACC,uBAAOW,QAAQ,WAAf,sBACA,uBACCC,GAAG,WACHxB,KAAK,OACLyB,SAnCH,SAAwBX,GACvBJ,EAAYI,EAAEY,OAAOC,QAmCnBA,MAAOlB,IAER,uBAAOc,QAAQ,UAAf,yBACA,uBACCC,GAAG,UACHxB,KAAK,SACLyB,SAtCH,SAAmBX,GAClBF,EAAOE,EAAEY,OAAOC,QAsCdA,MAAOhB,IAER,cAAC,EAAD,CAAQZ,UAAU,SAASC,KAAK,SAAhC,0B,MC9CY4B,MAJf,SAAc9B,GACb,OAAO,oBAAIC,UAAU,OAAd,SAAsBD,EAAMI,YC8CrB2B,MA7Cf,WACC,MAA8BrB,mBAAS,CAAC,CAAEc,KAAM,MAAOX,IAAK,MAA5D,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAoCvB,oBAAS,GAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KACA,EAA0BzB,mBAAS,CAClC0B,GAAI,gBACJC,KAAM,0DAFP,mBAAO/B,EAAP,KAAcgC,EAAd,KAoBMC,EAAaP,EAAQQ,KAAI,SAACjB,EAAKkB,GACpC,OACC,+BACElB,EAAIC,KADN,KACcD,EAAIV,IADlB,gBAASU,EAAIC,KAAOiB,MAStB,OACC,gCACEP,GACA,cAAC,EAAD,CAAO5B,MAAOA,EAAM8B,GAAI7B,QAASD,EAAM+B,KAAM7B,WANhD,WACC2B,GAAc,MAOb,cAAC,EAAD,CAAMb,UA/BR,SAAqBC,GACR,oBAARA,GACHY,GAAc,GACdG,GAAS,SAACI,GAAD,mBAAC,eAAoBA,GAArB,kBAAiC,KAAO,wBAC/B,sBAARnB,GACVY,GAAc,GACdG,EAAS,CACRF,GAAI,cACJC,KAAM,+BAGPJ,GAAW,SAACS,GAAD,OAAgBnB,GAAhB,mBAAwBmB,UAqBnC,cAAC,EAAD,UAAOH,QCvCVI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.68f35b32.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Button(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"button\"\n\t\t\ttype={props.type || \"button\"}\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./Alert.css\";\nimport Button from \"./Button\";\n\nfunction Alert(props) {\n\treturn (\n\t\t<div className=\"alert\">\n\t\t\t<h2 className=\"alerth2\">{props.title}</h2>\n\t\t\t<p>{props.content}</p>\n\t\t\t<Button className=\"okbtn\" onClick={props.handleOkay}>\n\t\t\t\tOkay\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Button from \"./Button\";\n\nfunction Form(props) {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [age, setAge] = useState(\"\");\n\n\tfunction handleUsername(e) {\n\t\tsetUsername(e.target.value);\n\t}\n\n\tfunction handleAge(e) {\n\t\tsetAge(e.target.value);\n\t}\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif (username.trim().length === 0 || age.trim().length) {\n\t\t\tconsole.log(\"incomplete data\");\n\t\t\tprops.userInput(\"incomplete data\");\n\t\t} else if (+age < 1) {\n\t\t\tconsole.log(\"invalid age input\");\n\t\t\tprops.userInput(\"invalid age input\");\n\t\t} else {\n\t\t\tconst obj = {\n\t\t\t\tname: username,\n\t\t\t\tage: +age,\n\t\t\t};\n\t\t\tprops.userInput(obj);\n\t\t}\n\n\t\tsetUsername(\"\");\n\t\tsetAge(\"\");\n\t}\n\n\treturn (\n\t\t<form className=\"card\" onSubmit={handleSubmit}>\n\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t<input\n\t\t\t\tid=\"username\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tonChange={handleUsername}\n\t\t\t\tvalue={username}\n\t\t\t></input>\n\t\t\t<label htmlFor=\"userage\">Age (Years)</label>\n\t\t\t<input\n\t\t\t\tid=\"userage\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tonChange={handleAge}\n\t\t\t\tvalue={age}\n\t\t\t></input>\n\t\t\t<Button className=\"AddBtn\" type=\"submit\">\n\t\t\t\tAdd user\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./List.css\";\n\nfunction List(props) {\n\treturn <ul className=\"card\">{props.children}</ul>;\n}\n\nexport default List;\n","import React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\nfunction App() {\n\tconst [allList, setAllList] = useState([{ name: \"ken\", age: 18 }]);\n\tconst [emptyAlert, setEmptyAlert] = useState(false);\n\tconst [title, setTitle] = useState({\n\t\th2: \"Invalid Input\",\n\t\tpara: \"Please enter a valid name and age (non-empty values).\",\n\t});\n\n\tfunction handleInput(obj) {\n\t\tif (obj === \"incomplete data\") {\n\t\t\tsetEmptyAlert(true);\n\t\t\tsetTitle((prevState) => ({ ...prevState, [\"h2\"]: \"Incomplete data\" }));\n\t\t} else if (obj === \"invalid age input\") {\n\t\t\tsetEmptyAlert(true);\n\t\t\tsetTitle({\n\t\t\t\th2: \"Invalid Age\",\n\t\t\t\tpara: \"Please enter a valid age.\",\n\t\t\t});\n\t\t} else {\n\t\t\tsetAllList((prevState) => [obj, ...prevState]);\n\t\t}\n\t}\n\n\tconst allListing = allList.map((obj, i) => {\n\t\treturn (\n\t\t\t<li key={obj.name + i}>\n\t\t\t\t{obj.name} ({obj.age} years old)\n\t\t\t</li>\n\t\t);\n\t});\n\n\tfunction hideAlert() {\n\t\tsetEmptyAlert(false);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{emptyAlert && (\n\t\t\t\t<Alert title={title.h2} content={title.para} handleOkay={hideAlert} />\n\t\t\t)}\n\t\t\t<Form userInput={handleInput} />\n\t\t\t<List>{allListing}</List>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}