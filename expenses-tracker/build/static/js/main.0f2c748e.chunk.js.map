{"version":3,"sources":["components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","components/UI/Card.jsx","components/ExpensesFilter/ExpensesFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","App.js","index.js"],"names":["ExpenseForm","props","useState","titleInput","setTitleInput","amountInput","setAmountInput","dateInput","setDateInput","onSubmit","e","preventDefault","expenseData","title","amount","parseInt","date","Date","onSaveExpData","className","type","value","onChange","text","target","min","step","onClick","onCollape","NewExpense","hide","setHide","toSwitch","inputExpData","expData","id","Math","random","toString","onAddExp","Card","classes","children","ExpensesFilter","selectedYr","onFilterYR","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","console","log","ExpensesList","items","length","map","expense","i","ChartBar","barFillHeight","maxVal","round","style","height","label","Chart","dataPointValue","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","obj","mthIdx","getMonth","Expenses","yearList","setYearList","filterData","filter","yr","onNewData","initialDATA","App","setExpenses","data","prevData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f2c748e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n\tconst [titleInput, setTitleInput] = useState(\"\");\n\tconst [amountInput, setAmountInput] = useState(\"\");\n\tconst [dateInput, setDateInput] = useState(\"\");\n\n\tconst changeTitleHandler = (e) => {\n\t\tconst text = e.target.value;\n\t\tsetTitleInput(text);\n\t};\n\n\tconst changeAmountHandler = (e) => {\n\t\tconst text = e.target.value;\n\t\tsetAmountInput(text);\n\t};\n\n\tconst changeDateHandler = (e) => {\n\t\tconst text = e.target.value;\n\t\tsetDateInput(text);\n\t};\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\n\t\tconst expenseData = {\n\t\t\ttitle: titleInput,\n\t\t\tamount: parseInt(amountInput),\n\t\t\tdate: new Date(dateInput),\n\t\t};\n\n\t\tprops.onSaveExpData(expenseData);\n\t\tsetTitleInput(\"\");\n\t\tsetAmountInput(\"\");\n\t\tsetDateInput(\"\");\n\t};\n\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<div className=\"new-expense__controls\">\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input type=\"text\" value={titleInput} onChange={changeTitleHandler} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={amountInput}\n\t\t\t\t\t\tmin=\"0.01\"\n\t\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\t\tonChange={changeAmountHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tvalue={dateInput}\n\t\t\t\t\t\tmin=\"2019-01-01\"\n\t\t\t\t\t\tstep=\"2022-12-31\"\n\t\t\t\t\t\tonChange={changeDateHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"new-expense__actions\">\n\t\t\t\t<button type=\"reset\" onClick={props.onCollape}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button type=\"submit\">Add expense</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n\tconst [hide, setHide] = useState(true);\n\n\tconst onSaveExpDataHandler = (inputExpData) => {\n\t\tconst expData = {\n\t\t\t...inputExpData,\n\t\t\tid: Math.random().toString(),\n\t\t};\n\t\tprops.onAddExp(expData);\n\t};\n\n\tfunction toSwitch() {\n\t\tif (hide) {\n\t\t\tsetHide(false);\n\t\t} else {\n\t\t\tsetHide(true);\n\t\t}\n\t}\n\treturn (\n\t\t<div className=\"new-expense\">\n\t\t\t{hide ? (\n\t\t\t\t<button onClick={toSwitch}>Add expense</button>\n\t\t\t) : (\n\t\t\t\t<ExpenseForm\n\t\t\t\t\tonSaveExpData={onSaveExpDataHandler}\n\t\t\t\t\tonCollape={toSwitch}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default NewExpense;\n","import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n\tconst classes = \"card \" + props.className;\n\treturn <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n\tconst filterHandler = (e) => {\n\t\treturn props.onFilterYR(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"expenses-filter\">\n\t\t\t<div className=\"expenses-filter__control\">\n\t\t\t\t<label>Filter by year</label>\n\t\t\t\t<select value={props.selectedYr} onChange={filterHandler}>\n\t\t\t\t\t<option value=\"2022\">2022</option>\n\t\t\t\t\t<option value=\"2021\">2021</option>\n\t\t\t\t\t<option value=\"2020\">2020</option>\n\t\t\t\t\t<option value=\"2019\">2019</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n\tconst month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n\tconst day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\tconst year = props.date.getFullYear();\n\n\treturn (\n\t\t<div className=\"expense-date\">\n\t\t\t<div className=\"expense-date__month\">{month}</div>\n\t\t\t<div className=\"expense-date__year\">{year}</div>\n\t\t\t<div className=\"expense-date__day\">{day}</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseDate;\n","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"../Expenses/ExpenseDate\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n\tconst [title, setTitle] = useState(props.title);\n\n\tconst clickHandler = (e) => {\n\t\tsetTitle(\"Update!!\");\n\t\tconst target = e.target;\n\t\treturn console.log(target);\n\t};\n\treturn (\n\t\t<Card className=\"expense-item\">\n\t\t\t<ExpenseDate date={props.date} />\n\t\t\t<div className=\"expense-item__description\">\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<div className=\"expense-item__price\">${props.amount}</div>\n\t\t\t</div>\n\t\t\t<button onClick={clickHandler}>Change Title</button>\n\t\t</Card>\n\t);\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nfunction ExpensesList(props) {\n\tif (props.items.length === 0) {\n\t\treturn <h2 className=\"expenses-list__fallback\">No data found.</h2>;\n\t}\n\n\treturn (\n\t\t<ul className=\"expenses-list\">\n\t\t\t{props.items.map((expense, i) => (\n\t\t\t\t<ExpenseItem\n\t\t\t\t\tkey={expense.id}\n\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\tdate={expense.date}\n\t\t\t\t\tamount={expense.amount}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nexport default function ChartBar(props) {\n\tlet barFillHeight = \"0%\";\n\tif (props.maxVal > 0) {\n\t\tbarFillHeight = Math.round((props.value / props.maxVal) * 100) + \"%\";\n\t}\n\n\treturn (\n\t\t<div className=\"chart-bar\">\n\t\t\t<div className=\"chart-bar__inner\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"chart-bar__fill\"\n\t\t\t\t\tstyle={{ height: barFillHeight }}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nfunction Chart(props) {\n\tconst dataPointValue = props.dataPoints.map((dataPoint) => dataPoint.value);\n\n\tconst totalMax = Math.max(...dataPointValue);\n\tconsole.log(dataPointValue);\n\tconsole.log(totalMax);\n\treturn (\n\t\t<div className=\"chart\">\n\t\t\t{props.dataPoints.map((dataPoint) => (\n\t\t\t\t<ChartBar\n\t\t\t\t\tkey={dataPoint.label}\n\t\t\t\t\tvalue={dataPoint.value}\n\t\t\t\t\tmaxVal={totalMax}\n\t\t\t\t\tlabel={dataPoint.label}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nexport default function ExpensesChart(props) {\n\tconst chartDataPoints = [\n\t\t{ label: \"Jan\", value: 0 },\n\t\t{ label: \"Feb\", value: 0 },\n\t\t{ label: \"Mar\", value: 0 },\n\t\t{ label: \"Apr\", value: 0 },\n\t\t{ label: \"May\", value: 0 },\n\t\t{ label: \"Jun\", value: 0 },\n\t\t{ label: \"Jul\", value: 0 },\n\t\t{ label: \"Aug\", value: 0 },\n\t\t{ label: \"Sep\", value: 0 },\n\t\t{ label: \"Oct\", value: 0 },\n\t\t{ label: \"Nov\", value: 0 },\n\t\t{ label: \"Dec\", value: 0 },\n\t];\n\n\tfor (let obj of props.expenses) {\n\t\tconst mthIdx = obj.date.getMonth();\n\t\tchartDataPoints[mthIdx].value += obj.amount;\n\t\tconsole.log(obj.amount);\n\t\tconsole.log(chartDataPoints[mthIdx]);\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n}\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n\tconst [yearList, setYearList] = useState(\"2021\");\n\n\tconst filterChangeHandler = (yr) => {\n\t\tsetYearList(yr);\n\t};\n\n\tconst filterData = props.items.filter((obj) => {\n\t\treturn obj.date.getFullYear().toString() === yearList;\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Card className=\"expenses\">\n\t\t\t\t<ExpenseFilter\n\t\t\t\t\tselectedYr={yearList}\n\t\t\t\t\tonFilterYR={filterChangeHandler}\n\t\t\t\t\tvalue={props.onNewData}\n\t\t\t\t/>\n\t\t\t\t<ExpensesChart expenses={filterData} />\n\t\t\t\t<ExpensesList items={filterData} />\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst initialDATA = [\n\t{\n\t\tid: \"e1\",\n\t\ttitle: \"Toilet Paper\",\n\t\tamount: 94.12,\n\t\tdate: new Date(2020, 7, 14),\n\t},\n\t{ id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n\t{\n\t\tid: \"e3\",\n\t\ttitle: \"Car Insurance\",\n\t\tamount: 294.67,\n\t\tdate: new Date(2021, 2, 28),\n\t},\n\t{\n\t\tid: \"e4\",\n\t\ttitle: \"New Desk (Wooden)\",\n\t\tamount: 450,\n\t\tdate: new Date(2021, 5, 12),\n\t},\n];\n\nfunction App() {\n\tconst [expenses, setExpenses] = useState(initialDATA);\n\n\tconst addExpHandler = (data) => {\n\t\tconsole.log(\"in app js\");\n\t\tsetExpenses((prevData) => {\n\t\t\treturn [data, ...prevData];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Let's get started!</h2>\n\t\t\t<NewExpense onAddExp={addExpHandler} />\n\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}